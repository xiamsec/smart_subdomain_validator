
from typing import List, Dict, Any
import html, json

def _esc(x):
    return html.escape(str(x) if x is not None else "")

def build_html(results: List[Dict[str, Any]], meta: Dict[str, Any]) -> str:
    title = meta.get("title", " Enterprise Report")
    css = """
    body{font-family:Inter,Segoe UI,Arial,sans-serif;background:#0b1320;color:#e6edf3;margin:0;padding:24px;}
    h1{margin:0 0 8px 0;font-size:28px}
    .sub{color:#9da7b1;margin-bottom:16px}
    table{width:100%;border-collapse:collapse;background:#0e172a;border-radius:12px;overflow:hidden}
    th,td{padding:10px 12px;border-bottom:1px solid #1b2540;font-size:14px;vertical-align:top}
    th{background:#121b36;text-align:left;position:sticky;top:0}
    tr:hover td{background:#0f1830}
    .alive{color:#22c55e;font-weight:600}
    .dead{color:#ef4444;font-weight:600}
    .pill{border:1px solid #1b2540;border-radius:999px;padding:2px 8px;font-size:12px;color:#a6b1c3}
    .grid{display:grid;grid-template-columns:repeat(3,minmax(0,1fr));gap:12px;margin:16px 0}
    .card{background:#0e172a;border:1px solid #1b2540;border-radius:12px;padding:12px}
    code{background:#0b1320;border:1px solid #1b2540;border-radius:6px;padding:2px 6px}
    footer{color:#9da7b1;margin-top:20px}
    a{color:#7aa2ff}
    """
    head = f"<h1>{_esc(title)}</h1><div class='sub'>Targets: {', '.join(meta.get('domains', []))} â€¢ Total rows: {len(results)}</div>"
    summary = f"""
    <div class='grid'>
      <div class='card'>Alive: <b>{sum(1 for r in results if r.get('http_alive'))}</b></div>
      <div class='card'>With TLS: <b>{sum(1 for r in results if r.get('tls_cn'))}</b></div>
      <div class='card'>Unique Servers: <b>{len(set((r.get('server') or '').lower() for r in results))}</b></div>
      <div class='card'>Suspected Takeovers: <b>{sum(1 for r in results if r.get('takeover_risk')=='High')}</b></div>
      <div class='card'>Screenshots: <b>{sum(1 for r in results if r.get('screens_path'))}</b></div>
      <div class='card'>With Buckets: <b>{sum(1 for r in results if r.get('buckets'))}</b></div>
    </div>
    """
    rows = []
    for r in results:
        ports = r.get("ports") or []
        waf = r.get("waf") or ""
        ssl_days = r.get("tls_days_left")
        techs = ", ".join(r.get("technologies") or [])
        takeover = r.get("takeover_risk") or ""
        screen = r.get("screens_path") or ""
        rows.append(f"""
        <tr>
            <td>{_esc(r.get('subdomain'))}<div class='pill'>{_esc(', '.join(r.get('resolved_ips') or []))}</div></td>
            <td>{'<span class=alive>Alive</span>' if r.get('http_alive') else '<span class=dead>Dead</span>'}<br><span class='pill'>{_esc(r.get('status'))}</span></td>
            <td>{_esc(r.get('scheme') or '')}</td>
            <td>{_esc(r.get('tls_cn') or '')}<br><span class='pill'>{_esc(ssl_days if ssl_days is not None else '')}</span></td>
            <td>{_esc(r.get('server') or '')}<br><span class='pill'>{_esc(waf)}</span></td>
            <td>{_esc(r.get('title') or '')}<br><span class='pill'>{_esc(r.get('content_length') or '')}</span></td>
            <td>{_esc(techs)}</td>
            <td>{_esc(takeover)}</td>
            <td>{_esc(','.join(str(p.get('port')) for p in ports) if ports else '')}</td>
            <td>{('<a href=\"'+_esc(screen)+'\">open</a>') if screen else ''}</td>
        </tr>""")
    table = "<table><thead><tr><th>Subdomain / IPs</th><th>HTTP</th><th>Scheme</th><th>TLS</th><th>Server/WAF</th><th>Title / Size</th><th>Tech</th><th>Takeover</th><th>Ports</th><th>Screenshot</th></tr></thead><tbody>" + "".join(rows) + "</tbody></table>"
    return f"<!doctype html><html><meta charset='utf-8'><title>{_esc(title)}</title><style>{css}</style><body>{head}{summary}{table}<footer>Generated by sec</footer></body></html>"
